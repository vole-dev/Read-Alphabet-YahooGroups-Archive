{
  "userId": 214981082,
  "authorName": "Paul Tremblay",
  "from": "Paul Tremblay &lt;phthenry@...&gt;",
  "profile": "paulhtremblay",
  "replyTo": "LIST",
  "senderId": "T7Jx84EOl4JwLs8XsdWQCfnAacbZQ6gISUdYT_Ed7GbpNLcI35Sn7BNuWcgSirnUKsyGRM8eRb_S8RD1pa73PO5xbPfmXn_ffg",
  "spamInfo": {
    "isSpam": false,
    "reason": "12"
  },
  "subject": "Re: [Read_Alphabet] get your news in QS!",
  "postDate": "1194751652",
  "msgId": 1402,
  "canDelete": false,
  "contentTrasformed": false,
  "systemMessage": false,
  "headers": {
    "messageIdInHeader": "PDQ3MzY3NkE0LjcwODAwMDlAaWdsb3UuY29tPg==",
    "inReplyToHeader": "PDQzMDgwMmVjMDcxMTEwMTc0MXUyNDMyM2E4aTQwOWQ4OGVmNzE1ODY2N2RAbWFpbC5nbWFpbC5jb20+",
    "referencesHeader": "PDQ3MzYzMjQ5LjQwOTA3MDVAaWdsb3UuY29tPiA8NDMwODAyZWMwNzExMTAxNzQxdTI0MzIzYThpNDA5ZDg4ZWY3MTU4NjY3ZEBtYWlsLmdtYWlsLmNvbT4="
  },
  "prevInTopic": 1401,
  "nextInTopic": 1406,
  "prevInTime": 1401,
  "nextInTime": 1403,
  "topicId": 1397,
  "numMessagesInTopic": 29,
  "msgSnippet": "... Well, here is the geek explanation. There are these thinks called rss feeds, which basically list all the latest news. With python, a programming language,",
  "messageBody": "<div id=\"ygrps-yiv-1604252064\">Moira O&#39;Brien wrote:<br/>\n<blockquote><span title=\"ireply\"> &gt; <br/>\n&gt; <br/>\n&gt; I am impressed Paul.  The only fault i can find with your <br/>\n&gt; transliteration is the lack of capital letter dots in front of names, <br/>\n&gt; but the context makes it quite clear so it does not impede reading.<br/>\n&gt; <br/>\n&gt; I will be very interested in finding out more about how you achieve the <br/>\n&gt; automatic conversion from TO to QS.  Maybe you could find time to PM me <br/>\n&gt; or post to the group if you think it would be of general interest.<br/>\n&gt; <br/>\n<br/>\n </span></blockquote>Well, here is the geek explanation. There are these thinks called rss <br/>\nfeeds, which basically list all the latest news. With python, a <br/>\nprogramming language, you can get all of the leads with just a few lines <br/>\nof code. That is step one. Then you have to look at the link of each <br/>\nstory and get the story (as opposed to just the headlines), and I do <br/>\nthat with a text browser called lynx. Lynx is like any browser except it <br/>\ndisplays the page in plain text--a rather simple version of Firefox. <br/>\nMore importantly to my purpose, it converts the news to plain text. So <br/>\nthat is step two. I now have the news story in a regular text file, such <br/>\nas you would write an email in.<br/>\n<br/>\nThen I have to get rid of all the junk on the page, since web pages are <br/>\nfull of so much advertising you possibly couldn&#39;t convert them just as <br/>\nthey are. I have to look for patterns. For instance, I know that the web <br/>\npages from this site start with [3]AP, so I know I can get rid of <br/>\neverything before that. I am counting on that the same patterns will <br/>\nalways be there, which they wouldn&#39;t be for other sites, or if this one <br/>\nsite changed their format. In other words, I&#39;m really hacking it here. <br/>\nNow I translate the plain text to QS which I&#39;ll explain below). Once it <br/>\nis in QS, I make a so called LaTeX file. For news, this format is <br/>\nsimple. Latex will automatically generate a table of contents and it <br/>\nwill use the kerning information in a font, so that the text has the <br/>\nright space between them. (I have come across some texts on line in <br/>\nwhich the kerning was so bad that I couldn&#39;t tell where a word ended and <br/>\nwhere one began, which makes reading hard.) Now I have a PDF file with <br/>\nthe font embedded, so even if you didn&#39;t have the font on your system, <br/>\nyou can still read the PDF with just a click. (How all PDF works.) <br/>\nLastly, because soreforge is such a nice site and because they offer <br/>\nservices for free, it allows me to automatically upload my PDF. This can <br/>\nall be done while I&#39;m sleeping. On the other hand, there are so many <br/>\nsteps that something could go wrong. I hope not, but we&#39;ll see.<br/>\n<br/>\nThe part you want to know is probably just the conversion. Writing a <br/>\nconversion program is pretty easy. You just have to break each line into <br/>\nwords. Python and other such programs were built to do this. Once you <br/>\nhave a list of words, you look up the match in a dictionary. That&#39;s <br/>\nwhere the real heart of this whole process lies--in the dictionary. I <br/>\nwas lucky that there is a word data base of 100 000 words, that lists <br/>\nwords with suffixes and prefixes. So a portion looks like this:<br/>\n<br/>\nread rId<br/>\nreads rIdz<br/>\nreading rIdN<br/>\n<br/>\nOr actually, that&#39;s what my word base looks like. The original consisted <br/>\nof the word in TO and the pronounciation of the word on the right, and <br/>\nit was a simple matter of changing the pronounciation to QS<br/>\n<br/>\nYou can see each line just consists of two words, one in TO, and one in <br/>\nQS as you might type on your keyboard. For each word the program finds <br/>\nin the news article, it tries to find the match in the dictionary. If it <br/>\ndoesn&#39;t find one, it simply writes the original word. Otherwise, it uses <br/>\nthe word it finds.<br/>\n<br/>\nLast, the conversion part of the program can change the encoding of the <br/>\nword. It can keep the encoding in ASCII or change it to Unicode. For the <br/>\nnews, I use Unicode so that the words that are not converted appear in <br/>\nTO, and those that do appear in QS.<br/>\n<br/>\nI&#39;m not sure how much detail you wanted. But really to sum up, to <br/>\nconvert TO to QS only requires a good dictionary. The rest of the <br/>\nprogram could be done by anybody who trained themselves in maybe just a <br/>\nfew weeks. So the quality of the translation depends on the dictionary. <br/>\nRight now I think my dictionary is adequate, but not great. What I am <br/>\ndoing is creating a separate dictionary a bit at a time. I transliterate <br/>\na Grimm&#39;s fairy tale, and unlike the news, carefully check the file. The <br/>\nprogram will actually list the unchecked and unfound words, so I can <br/>\nlook at this list. I correct words and add them to my good dictionary.<br/>\n<br/>\nI say this because I am hoping that others will start contributing to a <br/>\ndictionary. With a good dictionary, we could transliterate even long <br/>\nworks in a short amount of time.<br/>\n<br/>\nMostly I prefer to do my writing and reading off of the computer. <br/>\nUnfortunately, there are not books written in QS, and I would like to <br/>\nimprove my QS. So looking at the news in the morning seems a good way <br/>\nfor me to do this. I can print out the PDF or versions of it and read it <br/>\nwhen I have a chance. I hope others can do the same. That is my <br/>\nintention, anyway.<br/>\n<br/>\nPaul<br/>\n<br/>\nPS Yes, name dots are sorely lacking in my transliteration. How is a <br/>\nprogram to know if &quot;bush&quot; means the shrub or the president? In the <br/>\nfuture I hope the program may get a bit more sophisticated to handle <br/>\nthese situations. Bu some words, like Chavez, should always have a name <br/>\ndot, so that is just a matter of correcting the dictionary.</div>",
  "specialLinks": [],
  "rawEmail": "Return-Path: &lt;phthenry@...&gt;\r\nX-Sender: phthenry@...\r\nX-Apparently-To: Read_Alphabet@yahoogroups.com\r\nX-Received: (qmail 67335 invoked from network); 11 Nov 2007 03:27:40 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m47.grp.scd.yahoo.com with QMQP; 11 Nov 2007 03:27:40 -0000\r\nX-Received: from unknown (HELO rdsmtp.iglou.com) (192.107.41.63)\n  by mta16.grp.scd.yahoo.com with SMTP; 11 Nov 2007 03:27:40 -0000\r\nX-Received: from iglou1.iglou.com ([192.107.41.3] helo=mail.iglou.com)\n\tby rdsmtp.iglou.com with esmtpa (Exim MTA/8.19.3)\n\t(envelope-from &lt;phthenry@...&gt;)\n\tid 1Ir3U3-0006UD-B4 by authid &lt;igloumta&gt; with igloumta_auth\n\tfor Read_Alphabet@yahoogroups.com; Sat, 10 Nov 2007 22:27:39 -0500\r\nX-Received: from loudsl01-253-111-18.iglou.com ([64.253.111.18] helo=Enid-Johnsons-Computer.local)\n\tby smtp.iglou.com with esmtp (Exim MTA/8.19.3)\n\t(envelope-from &lt;phthenry@...&gt;)\n\tid 1Ir3U2-0004hs-RN\n\tfor Read_Alphabet@yahoogroups.com; Sat, 10 Nov 2007 22:27:39 -0500\r\nMessage-ID: &lt;473676A4.7080009@...&gt;\r\nDate: Sat, 10 Nov 2007 22:27:32 -0500\r\nUser-Agent: Thunderbird 2.0.0.6 (Macintosh/20070728)\r\nMIME-Version: 1.0\r\nTo: Read_Alphabet@yahoogroups.com\r\nReferences: &lt;47363249.4090705@...&gt; &lt;430802ec0711101741u24323a8i409d88ef7158667d@...&gt;\r\nIn-Reply-To: &lt;430802ec0711101741u24323a8i409d88ef7158667d@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-IgLou-Customer: 6ab7d2bd86677d7d54d075759b28f06c\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Paul Tremblay &lt;phthenry@...&gt;\r\nSubject: Re: [Read_Alphabet] get your news in QS!\r\nX-Yahoo-Group-Post: member; u=214981082; y=NaQ8aIKV98APpX8G7DyfSESHAQdK6A6rMFkxZtCqXaOwgxaUg2gFHQ\r\nX-Yahoo-Profile: paulhtremblay\r\n\r\nMoira O&#39;Brien wrote:\n&gt; \n&gt; \n&gt; I am impressed Paul.  The only fault i can find with your \n&gt; transliteration is the lack of capital letter dots in front of names, \n&gt; but the context makes it quite clear so it does not impede reading.\n&gt; \n&gt; I will be very interested in finding out more about how you achieve the \n&gt; automatic conversion from TO to QS.  Maybe you could find time to PM me \n&gt; or post to the group if you think it would be of general interest.\n&gt; \n\nWell, here is the geek explanation. There are these thinks called rss \nfeeds, which basically list all the latest news. With python, a \nprogramming language, you can get all of the leads with just a few lines \nof code. That is step one. Then you have to look at the link of each \nstory and get the story (as opposed to just the headlines), and I do \nthat with a text browser called lynx. Lynx is like any browser except it \ndisplays the page in plain text--a rather simple version of Firefox. \nMore importantly to my purpose, it converts the news to plain text. So \nthat is step two. I now have the news story in a regular text file, such \nas you would write an email in.\n\nThen I have to get rid of all the junk on the page, since web pages are \nfull of so much advertising you possibly couldn&#39;t convert them just as \nthey are. I have to look for patterns. For instance, I know that the web \npages from this site start with [3]AP, so I know I can get rid of \neverything before that. I am counting on that the same patterns will \nalways be there, which they wouldn&#39;t be for other sites, or if this one \nsite changed their format. In other words, I&#39;m really hacking it here. \nNow I translate the plain text to QS which I&#39;ll explain below). Once it \nis in QS, I make a so called LaTeX file. For news, this format is \nsimple. Latex will automatically generate a table of contents and it \nwill use the kerning information in a font, so that the text has the \nright space between them. (I have come across some texts on line in \nwhich the kerning was so bad that I couldn&#39;t tell where a word ended and \nwhere one began, which makes reading hard.) Now I have a PDF file with \nthe font embedded, so even if you didn&#39;t have the font on your system, \nyou can still read the PDF with just a click. (How all PDF works.) \nLastly, because soreforge is such a nice site and because they offer \nservices for free, it allows me to automatically upload my PDF. This can \nall be done while I&#39;m sleeping. On the other hand, there are so many \nsteps that something could go wrong. I hope not, but we&#39;ll see.\n\nThe part you want to know is probably just the conversion. Writing a \nconversion program is pretty easy. You just have to break each line into \nwords. Python and other such programs were built to do this. Once you \nhave a list of words, you look up the match in a dictionary. That&#39;s \nwhere the real heart of this whole process lies--in the dictionary. I \nwas lucky that there is a word data base of 100 000 words, that lists \nwords with suffixes and prefixes. So a portion looks like this:\n\nread rId\nreads rIdz\nreading rIdN\n\nOr actually, that&#39;s what my word base looks like. The original consisted \nof the word in TO and the pronounciation of the word on the right, and \nit was a simple matter of changing the pronounciation to QS\n\nYou can see each line just consists of two words, one in TO, and one in \nQS as you might type on your keyboard. For each word the program finds \nin the news article, it tries to find the match in the dictionary. If it \ndoesn&#39;t find one, it simply writes the original word. Otherwise, it uses \nthe word it finds.\n\nLast, the conversion part of the program can change the encoding of the \nword. It can keep the encoding in ASCII or change it to Unicode. For the \nnews, I use Unicode so that the words that are not converted appear in \nTO, and those that do appear in QS.\n\nI&#39;m not sure how much detail you wanted. But really to sum up, to \nconvert TO to QS only requires a good dictionary. The rest of the \nprogram could be done by anybody who trained themselves in maybe just a \nfew weeks. So the quality of the translation depends on the dictionary. \nRight now I think my dictionary is adequate, but not great. What I am \ndoing is creating a separate dictionary a bit at a time. I transliterate \na Grimm&#39;s fairy tale, and unlike the news, carefully check the file. The \nprogram will actually list the unchecked and unfound words, so I can \nlook at this list. I correct words and add them to my good dictionary.\n\nI say this because I am hoping that others will start contributing to a \ndictionary. With a good dictionary, we could transliterate even long \nworks in a short amount of time.\n\nMostly I prefer to do my writing and reading off of the computer. \nUnfortunately, there are not books written in QS, and I would like to \nimprove my QS. So looking at the news in the morning seems a good way \nfor me to do this. I can print out the PDF or versions of it and read it \nwhen I have a chance. I hope others can do the same. That is my \nintention, anyway.\n\nPaul\n\nPS Yes, name dots are sorely lacking in my transliteration. How is a \nprogram to know if &quot;bush&quot; means the shrub or the president? In the \nfuture I hope the program may get a bit more sophisticated to handle \nthese situations. Bu some words, like Chavez, should always have a name \ndot, so that is just a matter of correcting the dictionary.\n\n"
}