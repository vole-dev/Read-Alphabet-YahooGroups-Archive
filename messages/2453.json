{
  "userId": 458641688,
  "authorName": "Nathan Sharfi",
  "from": "Nathan Sharfi &lt;bonusfrogs@...&gt;",
  "profile": "dipartite",
  "replyTo": "LIST",
  "senderId": "9nHBEJ1my3r_HpmkJLicpx-Az61BkSG5PR4qtIBR5ImsmldnHHy5sh1eWkiOKmblhYd-8k5bXCMNox8_NkGyRbmJq9S868SZLlAB",
  "spamInfo": {
    "isSpam": false,
    "reason": "12"
  },
  "subject": "Re: [Read_Alphabet] Quikscript extensions to Shavian (or separate script)",
  "postDate": "1366500007",
  "msgId": 2453,
  "canDelete": false,
  "contentTrasformed": false,
  "systemMessage": false,
  "headers": {
    "messageIdInHeader": "PDU3QTVFQTI1LUE2NUEtNDRGNC1CNUExLTgyNThEQzRGMkQ4MkBnbWFpbC5jb20+",
    "inReplyToHeader": "PDYwOEZCQkE0LUY1QzEtNDVCNS1BQjZBLTg2ODY1MTI2RkRDOUBldmVydHlwZS5jb20+",
    "referencesHeader": "PDkyMDNFNUIzLUFFN0MtNDA0RC05NDYzLUQzNkQ3RDgzOTgzNEBldmVydHlwZS5jb20+IDw1MTcxREY1NC41MDMwNjAzQGNvbHNvbi5ldT4gPDE3NjM1MDMwLTJEQTktNEYxNC1BQ0I1LTNGODkyNEIyNDEyMUBnbWFpbC5jb20+IDw2MDA0RDIzRS04QjlBLTQ3ODgtODdGRS0yODQ5MENGNDNCRjlAZXZlcnR5cGUuY29tPiA8RTYyOTQ0ODctMkZGQS00NTIxLUIwNEEtOTNDNjEyNDY2MjE4QGdtYWlsLmNvbT4gPDYwOEZCQkE0LUY1QzEtNDVCNS1BQjZBLTg2ODY1MTI2RkRDOUBldmVydHlwZS5jb20+"
  },
  "prevInTopic": 2451,
  "nextInTopic": 2455,
  "prevInTime": 2452,
  "nextInTime": 2454,
  "topicId": 2433,
  "numMessagesInTopic": 25,
  "msgSnippet": "... Right \u2014 I d forgotten that many keyboard layouts use dead keys to produce letters *native* to one s own language, rather than just reserving dead keys",
  "messageBody": "<div id=\"ygrps-yiv-689645854\">On Apr 20, 2013, at 3:23 AM, Michael Everson &lt;<a rel=\"nofollow\" target=\"_blank\" href=\"mailto:everson@...\">everson@...</a>&gt; wrote:<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt; On 20 Apr 2013, at 10:08, Nathan Sharfi &lt;<a rel=\"nofollow\" target=\"_blank\" href=\"mailto:bonusfrogs@...\">bonusfrogs@...</a>&gt; wrote:<br/>\n&gt; <br/>\n&gt; &gt;&gt; Shavian, in having explicitly-encoded -r characters, solves that problem. If QS and Shavian were unified, wouldn&#39;t you be better off using those -r characters?<br/>\n&gt; &gt; <br/>\n&gt; &gt; If you have explicitly-encoded -r characters:<br/>\n&gt; &gt; - your keyboard layout will need to have keys for each -r character<br/>\n&gt; <br/>\n&gt; Not so. A sequence of keys can produce a single character. A Greek keyboard, for instance, has no \u03ac key. It has an accent key and an alpha key. <br/>\n<br/>\n </span></blockquote>Right \u2014 I&#39;d forgotten that many keyboard layouts use dead keys to produce letters *native* to one&#39;s own language, rather than just reserving dead keys for typing foreign letters and diacritical marks. Still, it&#39;s nice to not need any.<br/>\n<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt; &gt; - OWE ROW (used by Californians, at least) will be an (the?) one R-controlled vowel sound that doesn&#39;t have a key of its own<br/>\n&gt; <br/>\n&gt; A dedicated key is unnecessary.<br/>\n<br/>\n </span></blockquote>Agreed. I was merely pointing out that if you&#39;re writing precomposed ligatures for R-controlled vowels using one keyboard key per R-controlled vowel, OWE ROE will be the one R-controlled vowel that doesn&#39;t fit this pattern.<br/>\n<br/>\nThat said, if the usual keys for EAT, UTTER, and I are all dead and manage to Do The Right Thing\u2122, then OWE ROE won&#39;t be the odd pair out.<br/>\n<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt; &gt; - UTTER [syllable break] ROE does the right thing without having to type exotic invisible characters<br/>\n&gt; <br/>\n&gt; Invisible characters are not required for OpenType ligation. <br/>\n<br/>\n </span></blockquote>True. I&#39;m simply discussing a corner case where a Senior Quickscript font might mechanically join UTTER and ROE across a syllable boundary, contrary to the author&#39;s wishes.<br/>\n<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt; &gt; - you won&#39;t need a dedicated key for an exotic invisible character<br/>\n&gt; <br/>\n&gt; That can be put on an alt- or shift-alt position anyway. <br/>\n<br/>\n </span></blockquote>Agreed. ZWNJ shouldn&#39;t be at all handy considering how infrequently I&#39;d expect it to be used.<br/>\n<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt; And guys? Try to remember that it&#39;s amazing that the UCS supports Shavian at all, given its really small number of users. Same for the potential to support QS. OK?<br/>\n<br/>\n </span></blockquote>OK. You know the Unicode people better than I do, but I&#39;m still puzzled by their presumed unwillingness to have nine additional code points bloat up to 40 or so inside the sparsely-allocated SMP. If code points aren&#39;t the scarce resource that the UTC wants to minimize use of, then they&#39;re probably focused on one or more of the following:<br/>\n<br/>\n- the UTC&#39;s time and attention<br/>\n- anyone who&#39;s going to have to program in, or display a line item for, &quot;SHAVIAN QUICKSCRIPT {EXTENSIONS}&quot;<br/>\n<br/>\nIf they&#39;re not exclusively focused on code-point minimization, then it&#39;s unclear to me why using the same code point for both {something that looks like a long s}\u0010 (Shavian VOW) and {something that looks like backwards g} (Quikscript VIE) would increase our chances of getting QS into Unicode.</div>",
  "specialLinks": [],
  "rawEmail": "Return-Path: &lt;bonusfrogs@...&gt;\r\nX-Sender: bonusfrogs@...\r\nX-Apparently-To: Read_Alphabet@yahoogroups.com\r\nX-Received: (qmail 1132 invoked from network); 20 Apr 2013 23:20:11 -0000\r\nX-Received: from unknown (10.193.84.131)\n  by m10.grp.bf1.yahoo.com with QMQP; 20 Apr 2013 23:20:11 -0000\r\nX-Received: from unknown (HELO mail-da0-f44.google.com) (209.85.210.44)\n  by mta4.grp.bf1.yahoo.com with SMTP; 20 Apr 2013 23:20:11 -0000\r\nX-Received: by mail-da0-f44.google.com with SMTP id z20so2494536dae.3\n        for &lt;Read_Alphabet@yahoogroups.com&gt;; Sat, 20 Apr 2013 16:20:11 -0700 (PDT)\r\nX-Received: by 10.68.180.132 with SMTP id do4mr25580188pbc.96.1366500011117;\n        Sat, 20 Apr 2013 16:20:11 -0700 (PDT)\r\nReturn-Path: &lt;bonusfrogs@...&gt;\r\nX-Received: from spreadthinly.localdomain (pool-72-67-36-2.lsanca.fios.verizon.net. [72.67.36.2])\n        by mx.google.com with ESMTPS id br2sm18684292pbc.46.2013.04.20.16.20.09\n        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);\n        Sat, 20 Apr 2013 16:20:10 -0700 (PDT)\r\nContent-Type: text/plain; charset=utf-8\r\nMime-Version: 1.0 (Mac OS X Mail 6.3 &#92;(1503&#92;))\r\nIn-Reply-To: &lt;608FBBA4-F5C1-45B5-AB6A-86865126FDC9@...&gt;\r\nDate: Sat, 20 Apr 2013 16:20:07 -0700\r\nContent-Transfer-Encoding: quoted-printable\r\nMessage-Id: &lt;57A5EA25-A65A-44F4-B5A1-8258DC4F2D82@...&gt;\r\nReferences: &lt;9203E5B3-AE7C-404D-9463-D36D7D839834@...&gt; &lt;5171DF54.5030603@...&gt; &lt;17635030-2DA9-4F14-ACB5-3F8924B24121@...&gt; &lt;6004D23E-8B9A-4788-87FE-28490CF43BF9@...&gt; &lt;E6294487-2FFA-4521-B04A-93C612466218@...&gt; &lt;608FBBA4-F5C1-45B5-AB6A-86865126FDC9@...&gt;\r\nTo: Read_Alphabet@yahoogroups.com\r\nX-Mailer: Apple Mail (2.1503)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Nathan Sharfi &lt;bonusfrogs@...&gt;\r\nSubject: Re: [Read_Alphabet] Quikscript extensions to Shavian (or separate script)\r\nX-Yahoo-Group-Post: member; u=458641688; y=yPms9xt6wkGCa6kr7EhJU11bYP5EFnmZH720HUS6SXfLqSWb\r\nX-Yahoo-Profile: dipartite\r\n\r\n\nOn Apr 20, 2013, at 3:23 AM, Michael Everson &lt;everson@...&gt; wrote:=\r\n\n\n&gt; On 20 Apr 2013, at 10:08, Nathan Sharfi &lt;bonusfrogs@...&gt; wrote:\n&gt;=\r\n \n&gt; &gt;&gt; Shavian, in having explicitly-encoded -r characters, solves that pro=\r\nblem. If QS and Shavian were unified, wouldn&#39;t you be better off using thos=\r\ne -r characters?\n&gt; &gt; \n&gt; &gt; If you have explicitly-encoded -r characters:\n&gt; &gt;=\r\n - your keyboard layout will need to have keys for each -r character\n&gt; \n&gt; N=\r\not so. A sequence of keys can produce a single character. A Greek keyboard,=\r\n for instance, has no =CE=AC key. It has an accent key and an alpha key. \n\n=\r\nRight =E2=80=94 I&#39;d forgotten that many keyboard layouts use dead keys to p=\r\nroduce letters *native* to one&#39;s own language, rather than just reserving d=\r\nead keys for typing foreign letters and diacritical marks. Still, it&#39;s nice=\r\n to not need any.\n\n\n&gt; &gt; - OWE ROW (used by Californians, at least) will be =\r\nan (the?) one R-controlled vowel sound that doesn&#39;t have a key of its own\n&gt;=\r\n \n&gt; A dedicated key is unnecessary.\n\nAgreed. I was merely pointing out that=\r\n if you&#39;re writing precomposed ligatures for R-controlled vowels using one =\r\nkeyboard key per R-controlled vowel, OWE ROE will be the one R-controlled v=\r\nowel that doesn&#39;t fit this pattern.\n\nThat said, if the usual keys for EAT, =\r\nUTTER, and I are all dead and manage to Do The Right Thing=E2=84=A2, then O=\r\nWE ROE won&#39;t be the odd pair out.\n\n\n&gt; &gt; - UTTER [syllable break] ROE does t=\r\nhe right thing without having to type exotic invisible characters\n&gt; \n&gt; Invi=\r\nsible characters are not required for OpenType ligation. \n\nTrue. I&#39;m simply=\r\n discussing a corner case where a Senior Quickscript font might mechanicall=\r\ny join UTTER and ROE across a syllable boundary, contrary to the author&#39;s w=\r\nishes.\n\n\n&gt; &gt; - you won&#39;t need a dedicated key for an exotic invisible chara=\r\ncter\n&gt; \n&gt; That can be put on an alt- or shift-alt position anyway. \n\nAgreed=\r\n. ZWNJ shouldn&#39;t be at all handy considering how infrequently I&#39;d expect it=\r\n to be used.\n\n\n&gt; And guys? Try to remember that it&#39;s amazing that the UCS s=\r\nupports Shavian at all, given its really small number of users. Same for th=\r\ne potential to support QS. OK?\n\nOK. You know the Unicode people better than=\r\n I do, but I&#39;m still puzzled by their presumed unwillingness to have nine a=\r\ndditional code points bloat up to 40 or so inside the sparsely-allocated SM=\r\nP. If code points aren&#39;t the scarce resource that the UTC wants to minimize=\r\n use of, then they&#39;re probably focused on one or more of the following:\n\n- =\r\nthe UTC&#39;s time and attention\n- anyone who&#39;s going to have to program in, or=\r\n display a line item for, &quot;SHAVIAN QUICKSCRIPT {EXTENSIONS}&quot;\n\nIf they&#39;re no=\r\nt exclusively focused on code-point minimization, then it&#39;s unclear to me w=\r\nhy using the same code point for both {something that looks like a long s}=\r\n=10 (Shavian VOW) and {something that looks like backwards g} (Quikscript V=\r\nIE) would increase our chances of getting QS into Unicode.\n"
}