{
  "userId": 328329959,
  "authorName": "Jean-Fran\u00e7ois Colson",
  "from": "=?UTF-8?B?SmVhbi1GcmFuw6dvaXMgQ29sc29u?= &lt;jf@...&gt;",
  "profile": "j_f_colson",
  "replyTo": "LIST",
  "senderId": "DsfXYXtfgKD6e5PW0czJxRbuO1IBiF6jMaIxSG8hyZN-rqhyRkkyT0jA-0wwEk4sXCpukjdfcz1ec5rB4DdPNMDD2KOZ5dnFwQIlBC4oIlNWDPWUuXc4HvBWA82kkw",
  "spamInfo": {
    "isSpam": false,
    "reason": "12"
  },
  "subject": "Re: [Read_Alphabet] Quikscript extensions to Shavian (or separate script)",
  "postDate": "1366538272",
  "msgId": 2455,
  "canDelete": false,
  "contentTrasformed": false,
  "systemMessage": false,
  "headers": {
    "messageIdInHeader": "PDUxNzNCODIwLjMwNTAyMDhAY29sc29uLmV1Pg==",
    "inReplyToHeader": "PDU3QTVFQTI1LUE2NUEtNDRGNC1CNUExLTgyNThEQzRGMkQ4MkBnbWFpbC5jb20+",
    "referencesHeader": "PDkyMDNFNUIzLUFFN0MtNDA0RC05NDYzLUQzNkQ3RDgzOTgzNEBldmVydHlwZS5jb20+IDw1MTcxREY1NC41MDMwNjAzQGNvbHNvbi5ldT4gPDE3NjM1MDMwLTJEQTktNEYxNC1BQ0I1LTNGODkyNEIyNDEyMUBnbWFpbC5jb20+IDw2MDA0RDIzRS04QjlBLTQ3ODgtODdGRS0yODQ5MENGNDNCRjlAZXZlcnR5cGUuY29tPiA8RTYyOTQ0ODctMkZGQS00NTIxLUIwNEEtOTNDNjEyNDY2MjE4QGdtYWlsLmNvbT4gPDYwOEZCQkE0LUY1QzEtNDVCNS1BQjZBLTg2ODY1MTI2RkRDOUBldmVydHlwZS5jb20+IDw1N0E1RUEyNS1BNjVBLTQ0RjQtQjVBMS04MjU4REM0RjJEODJAZ21haWwuY29tPg=="
  },
  "prevInTopic": 2453,
  "nextInTopic": 2456,
  "prevInTime": 2454,
  "nextInTime": 2456,
  "topicId": 2433,
  "numMessagesInTopic": 25,
  "msgSnippet": "... I wouldn\u2019t. I think the Shavian ligatures should keep their Shavian forms in Quikscript and a text in Quikscript should be written without those",
  "messageBody": "<div id=\"ygrps-yiv-422034447\">Le 21/04/13 01:20, Nathan Sharfi a \u00e9crit :<br/>\n<blockquote><span title=\"ireply\"> &gt; On Apr 20, 2013, at 3:23 AM, Michael Everson &lt;<a rel=\"nofollow\" target=\"_blank\" href=\"mailto:everson@...\">everson@...</a>&gt; wrote:<br/>\n&gt;<br/>\n&gt;&gt; On 20 Apr 2013, at 10:08, Nathan Sharfi &lt;<a rel=\"nofollow\" target=\"_blank\" href=\"mailto:bonusfrogs@...\">bonusfrogs@...</a>&gt; wrote:<br/>\n&gt;&gt;<br/>\n&gt;&gt;&gt;&gt; Shavian, in having explicitly-encoded -r characters, solves that problem. If QS and Shavian were unified, wouldn&#39;t you be better off using those -r characters?<br/>\n </span></blockquote>I wouldn\u2019t. I think the Shavian ligatures should keep their Shavian <br/>\nforms in Quikscript and a text in Quikscript should be written without <br/>\nthose precomposed ligatures. If you make a Quikscript version of those <br/>\nligatures, you\u2019ll get two letters with the same shape : ERR and ARRAY.<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt;&gt;&gt; If you have explicitly-encoded -r characters:<br/>\n&gt;&gt;&gt; - your keyboard layout will need to have keys for each -r character<br/>\n&gt;&gt; Not so. A sequence of keys can produce a single character. A Greek keyboard, for instance, has no \u03ac key. It has an accent key and an alpha key.<br/>\n </span></blockquote>Halas, in standard keyboard layouts for Windows, the dead key mechanism <br/>\nonly works with BMP characters. Each dead key is identified by a single <br/>\nUCS-2 character, the base character must be a single UCS-2 character and <br/>\nthe outgoing character must be a single UCS-2 character. Surrogate pairs <br/>\nare not supported. It seems that limitation is common to MSKLC and WDK. <br/>\nFor a dead key support on Windows with Shavian, you should use a third <br/>\nparty software. Keyman would do the job. However, that sounds like using <br/>\na mallet to tap in a small finishing nail.<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt; Right \u2014 I&#39;d forgotten that many keyboard layouts use dead keys to produce letters *native* to one&#39;s own language, rather than just reserving dead keys for typing foreign letters and diacritical marks. Still, it&#39;s nice to not need any.<br/>\n&gt;<br/>\n&gt;<br/>\n&gt;&gt;&gt; - OWE ROW (used by Californians, at least) will be an (the?) one R-controlled vowel sound that doesn&#39;t have a key of its own<br/>\n&gt;&gt; A dedicated key is unnecessary.<br/>\n&gt; Agreed. I was merely pointing out that if you&#39;re writing precomposed ligatures for R-controlled vowels using one keyboard key per R-controlled vowel, OWE ROE will be the one R-controlled vowel that doesn&#39;t fit this pattern.<br/>\n&gt;<br/>\n&gt; That said, if the usual keys for EAT, UTTER, and I are all dead<br/>\n </span></blockquote>What do you mean?<br/>\n<br/>\n<blockquote><span title=\"ireply\"> &gt;   and manage to Do The Right Thing\u2122, then OWE ROE won&#39;t be the odd pair out.<br/>\n&gt;<br/>\n&gt;<br/>\n&gt;&gt;&gt; - UTTER [syllable break] ROE does the right thing without having to type exotic invisible characters<br/>\n&gt;&gt; Invisible characters are not required for OpenType ligation.<br/>\n&gt; True. I&#39;m simply discussing a corner case where a Senior Quickscript font might mechanically join UTTER and ROE across a syllable boundary, contrary to the author&#39;s wishes.<br/>\n&gt;<br/>\n&gt;<br/>\n&gt;&gt;&gt; - you won&#39;t need a dedicated key for an exotic invisible character<br/>\n&gt;&gt; That can be put on an alt- or shift-alt position anyway.<br/>\n&gt; Agreed. ZWNJ shouldn&#39;t be at all handy considering how infrequently I&#39;d expect it to be used.<br/>\n </span></blockquote>But if it is sometimes useful, it should be included on the keyboard.<br/>\n<br/>\n<blockquote><span title=\"qreply\"> &gt;<br/>\n&gt;<br/>\n&gt;&gt; And guys? Try to remember that it&#39;s amazing that the UCS supports Shavian at all, given its really small number of users. Same for the potential to support QS. OK?<br/>\n&gt; OK. You know the Unicode people better than I do, but I&#39;m still puzzled by their presumed unwillingness to have nine additional code points bloat up to 40 or so inside the sparsely-allocated SMP. If code points aren&#39;t the scarce resource that the UTC wants to minimize use of, then they&#39;re probably focused on one or more of the following:<br/>\n&gt;<br/>\n&gt; - the UTC&#39;s time and attention<br/>\n&gt; - anyone who&#39;s going to have to program in, or display a line item for, &quot;SHAVIAN QUICKSCRIPT {EXTENSIONS}&quot;<br/>\n&gt;<br/>\n&gt; If they&#39;re not exclusively focused on code-point minimization, then it&#39;s unclear to me why using the same code point for both {something that looks like a long s}\u0010 (Shavian VOW) and {something that looks like backwards g} (Quikscript VIE) would increase our chances of getting QS into Unicode.<br/>\n&gt; </span></blockquote></div>",
  "specialLinks": [],
  "rawEmail": "Return-Path: &lt;jf@...&gt;\r\nX-Sender: jf@...\r\nX-Apparently-To: Read_Alphabet@yahoogroups.com\r\nX-Received: (qmail 13638 invoked by uid 102); 21 Apr 2013 09:57:54 -0000\r\nX-Received: from unknown (HELO mta1.grp.bf1.yahoo.com) (10.193.84.135)\n  by m3.grp.bf1.yahoo.com with SMTP; 21 Apr 2013 09:57:54 -0000\r\nX-Received: (qmail 1102 invoked from network); 21 Apr 2013 09:57:54 -0000\r\nX-Received: from unknown (HELO csmtp11.one.com) (195.47.247.117)\n  by mta1.grp.bf1.yahoo.com with SMTP; 21 Apr 2013 09:57:54 -0000\r\nX-Received: from csmtp-filter1 (csmtp-filter1.one.com [195.47.247.104])\n\tby csmtp11.one.com (Postfix) with SMTP id 0D3D1C03B525E\n\tfor &lt;Read_Alphabet@yahoogroups.com&gt;; Sun, 21 Apr 2013 09:57:54 +0000 (UTC)\r\nX-Received: from csmtp-filter1 (csmtp-filter1.one.com [195.47.247.104])\n\tby 0.0.0.0:2500 (trex/4.8.23);\n\tSun, 21 Apr 2013 09:57:43 GMT\r\nMessage-ID: &lt;5173B820.3050208@...&gt;\r\nDate: Sun, 21 Apr 2013 11:57:52 +0200\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20130329 Thunderbird/17.0.5\r\nMIME-Version: 1.0\r\nTo: Read_Alphabet@yahoogroups.com\r\nReferences: &lt;9203E5B3-AE7C-404D-9463-D36D7D839834@...&gt; &lt;5171DF54.5030603@...&gt; &lt;17635030-2DA9-4F14-ACB5-3F8924B24121@...&gt; &lt;6004D23E-8B9A-4788-87FE-28490CF43BF9@...&gt; &lt;E6294487-2FFA-4521-B04A-93C612466218@...&gt; &lt;608FBBA4-F5C1-45B5-AB6A-86865126FDC9@...&gt; &lt;57A5EA25-A65A-44F4-B5A1-8258DC4F2D82@...&gt;\r\nIn-Reply-To: &lt;57A5EA25-A65A-44F4-B5A1-8258DC4F2D82@...&gt;\r\nContent-Type: text/plain; charset=UTF-8; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: =?UTF-8?B?SmVhbi1GcmFuw6dvaXMgQ29sc29u?= &lt;jf@...&gt;\r\nSubject: Re: [Read_Alphabet] Quikscript extensions to Shavian (or separate\n script)\r\nX-Yahoo-Group-Post: member; u=328329959; y=c4fpeXyywXAZNiObX8s2XZcNVwUwm_rwsL8io1CIMp9rissbIw\r\nX-Yahoo-Profile: j_f_colson\r\n\r\nLe 21/04/13 01:20, Nathan Sharfi a \u00e9crit :\n&gt; On Apr 20, 2013, at 3:23 AM, Michael Everson &lt;everson@...&gt; wrote:\n&gt;\n&gt;&gt; On 20 Apr 2013, at 10:08, Nathan Sharfi &lt;bonusfrogs@...&gt; wrote:\n&gt;&gt;\n&gt;&gt;&gt;&gt; Shavian, in having explicitly-encoded -r characters, solves that problem. If QS and Shavian were unified, wouldn&#39;t you be better off using those -r characters?\nI wouldn\u2019t. I think the Shavian ligatures should keep their Shavian \nforms in Quikscript and a text in Quikscript should be written without \nthose precomposed ligatures. If you make a Quikscript version of those \nligatures, you\u2019ll get two letters with the same shape : ERR and ARRAY.\n\n&gt;&gt;&gt; If you have explicitly-encoded -r characters:\n&gt;&gt;&gt; - your keyboard layout will need to have keys for each -r character\n&gt;&gt; Not so. A sequence of keys can produce a single character. A Greek keyboard, for instance, has no \u03ac key. It has an accent key and an alpha key.\nHalas, in standard keyboard layouts for Windows, the dead key mechanism \nonly works with BMP characters. Each dead key is identified by a single \nUCS-2 character, the base character must be a single UCS-2 character and \nthe outgoing character must be a single UCS-2 character. Surrogate pairs \nare not supported. It seems that limitation is common to MSKLC and WDK. \nFor a dead key support on Windows with Shavian, you should use a third \nparty software. Keyman would do the job. However, that sounds like using \na mallet to tap in a small finishing nail.\n\n&gt; Right \u2014 I&#39;d forgotten that many keyboard layouts use dead keys to produce letters *native* to one&#39;s own language, rather than just reserving dead keys for typing foreign letters and diacritical marks. Still, it&#39;s nice to not need any.\n&gt;\n&gt;\n&gt;&gt;&gt; - OWE ROW (used by Californians, at least) will be an (the?) one R-controlled vowel sound that doesn&#39;t have a key of its own\n&gt;&gt; A dedicated key is unnecessary.\n&gt; Agreed. I was merely pointing out that if you&#39;re writing precomposed ligatures for R-controlled vowels using one keyboard key per R-controlled vowel, OWE ROE will be the one R-controlled vowel that doesn&#39;t fit this pattern.\n&gt;\n&gt; That said, if the usual keys for EAT, UTTER, and I are all dead\nWhat do you mean?\n\n&gt;   and manage to Do The Right Thing\u2122, then OWE ROE won&#39;t be the odd pair out.\n&gt;\n&gt;\n&gt;&gt;&gt; - UTTER [syllable break] ROE does the right thing without having to type exotic invisible characters\n&gt;&gt; Invisible characters are not required for OpenType ligation.\n&gt; True. I&#39;m simply discussing a corner case where a Senior Quickscript font might mechanically join UTTER and ROE across a syllable boundary, contrary to the author&#39;s wishes.\n&gt;\n&gt;\n&gt;&gt;&gt; - you won&#39;t need a dedicated key for an exotic invisible character\n&gt;&gt; That can be put on an alt- or shift-alt position anyway.\n&gt; Agreed. ZWNJ shouldn&#39;t be at all handy considering how infrequently I&#39;d expect it to be used.\nBut if it is sometimes useful, it should be included on the keyboard.\n\n&gt;\n&gt;\n&gt;&gt; And guys? Try to remember that it&#39;s amazing that the UCS supports Shavian at all, given its really small number of users. Same for the potential to support QS. OK?\n&gt; OK. You know the Unicode people better than I do, but I&#39;m still puzzled by their presumed unwillingness to have nine additional code points bloat up to 40 or so inside the sparsely-allocated SMP. If code points aren&#39;t the scarce resource that the UTC wants to minimize use of, then they&#39;re probably focused on one or more of the following:\n&gt;\n&gt; - the UTC&#39;s time and attention\n&gt; - anyone who&#39;s going to have to program in, or display a line item for, &quot;SHAVIAN QUICKSCRIPT {EXTENSIONS}&quot;\n&gt;\n&gt; If they&#39;re not exclusively focused on code-point minimization, then it&#39;s unclear to me why using the same code point for both {something that looks like a long s}\u0010 (Shavian VOW) and {something that looks like backwards g} (Quikscript VIE) would increase our chances of getting QS into Unicode.\n&gt;\n\n\n"
}