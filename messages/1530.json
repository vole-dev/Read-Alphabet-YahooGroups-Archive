{
  "userId": 214981082,
  "authorName": "Paul Tremblay",
  "from": "Paul Tremblay &lt;phthenry@...&gt;",
  "profile": "paulhtremblay",
  "replyTo": "LIST",
  "senderId": "rkz3tMgkY2wRNIHcBlWR_nwTuGtUbocvjBldVu6fyGxWEXjwsL-nFIGQcxuX0K1OaBzskAaU9FMUteSmgzSkuMw25dbdlvIK7Q",
  "spamInfo": {
    "isSpam": false,
    "reason": "12"
  },
  "subject": "Re: [Read_Alphabet] Re: QS news update",
  "postDate": "1195365131",
  "msgId": 1530,
  "canDelete": false,
  "contentTrasformed": false,
  "systemMessage": false,
  "headers": {
    "messageIdInHeader": "PDQ3M0ZEMzBCLjYwMzA2MDJAaWdsb3UuY29tPg==",
    "inReplyToHeader": "PGZobDM2cSs4cmNqQGVHcm91cHMuY29tPg==",
    "referencesHeader": "PGZobDM2cSs4cmNqQGVHcm91cHMuY29tPg=="
  },
  "prevInTopic": 1529,
  "nextInTopic": 1532,
  "prevInTime": 1529,
  "nextInTime": 1531,
  "topicId": 1434,
  "numMessagesInTopic": 69,
  "msgSnippet": "... Okay, so I ve followed this rule as so: 1. Find out if the QS word ends in iN or IN or Ng 2. If 1 is true, check for the root word in TO. So for the",
  "messageBody": "<div id=\"ygrps-yiv-1777770504\">Anthony Grahn wrote:<br/>\n<blockquote><span title=\"ireply\"> &gt; <br/>\n<br/>\n&gt; <br/>\n&gt; This is an interesting proposal; I suppose the suggestion amounts to this:<br/>\n&gt; <br/>\n&gt; use #21Ing for:<br/>\n&gt; 1. the sounds of /N/ (this is the QM rule)<br/>\n&gt; 2. the sounds of Lexical Set KIT + /N/<br/>\n&gt; 3. the sounds of Lexical Set FLEECE + /N/<br/>\n&gt; <br/>\n&gt; I would also like to add:<br/>\n&gt; 4. the sound /N/+/g/<br/>\n&gt; <br/>\n&gt; I suggest #4 because 1.in practice most people will rarely distinguish<br/>\n&gt; &quot;finger&quot; and &quot;sing&quot; and 2. I know of no case where it is necessary to<br/>\n&gt; indicate that difference in writing and 3. the /Nk/ is more obvious<br/>\n&gt; and less error prone than /N/+/g/ and can be still be written as Ing+Key<br/>\n&gt; <br/>\n<br/>\n </span></blockquote>Okay, so I&#39;ve followed this rule as so:<br/>\n<br/>\n1. Find out if the QS word ends in &#39;iN&#39; or &#39;IN&#39; or &#39;Ng&#39;<br/>\n<br/>\n2. If 1 is true, check for the root word in TO. So for the word <br/>\nabsorbing (abzYrbiN), knock of the ing, and see if the root exits. It <br/>\ndoes, so go with the QS word abzYrbN<br/>\n<br/>\n3. If 2 is false, check to see for the root word in QS. So for the word<br/>\n(abrogating) AbragEtiN, if I knock off the &quot;ing&quot; in the TO word, I come <br/>\nup with &quot;abrogat,&quot; not a word. But if I knock off &quot;iN&quot; from the QS word, <br/>\nI come up with the QS word &quot;AbragEt,&quot; which exists. So change AbragEtiN <br/>\nto AbragEtN<br/>\n<br/>\n4. No root if found in either QS or TO, so don&#39;t change the word. This <br/>\nleads to some errors. For example, the word &quot;advocating&quot; (AdvakEtiN) has <br/>\nneither a TO or a QS root, because if you take off the &quot;ing,&quot; you get <br/>\n&quot;advoat,&quot; and if you take off the &quot;iN&quot; you get &quot;AdvakEt,&quot; but the root <br/>\nword in QS is pronounced &quot;Advakat,&quot; so there is no match.<br/>\n<br/>\nI followed the same rules for words ending in &quot;ed&quot; or &quot;ad.&quot;<br/>\n<br/>\nThis algorithm will give me an error with the word &quot;bed.&quot; It will look <br/>\nfor the TO root of &quot;b&quot; and find the letter b. In order to handle this I <br/>\nneed to explain that I am using this algorithm to generate a CMU <br/>\ndictionary. Another dict of checked words will always override this <br/>\ndictionary, so I need to put &quot;bed bed&quot; (TO and QS the same in this case) <br/>\nin the checked words dict. The algorithm will only be run when creating <br/>\na CMU dictionary, maybe only once, maybe several more times if we devise <br/>\nmore clever ways to convert the bulk of English words.<br/>\n<br/>\nPaul</div>",
  "specialLinks": [],
  "rawEmail": "Return-Path: &lt;phthenry@...&gt;\r\nX-Sender: phthenry@...\r\nX-Apparently-To: Read_Alphabet@yahoogroups.com\r\nX-Received: (qmail 68940 invoked from network); 18 Nov 2007 05:52:16 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m53.grp.scd.yahoo.com with QMQP; 18 Nov 2007 05:52:16 -0000\r\nX-Received: from unknown (HELO rdsmtp.iglou.com) (192.107.41.63)\n  by mta18.grp.scd.yahoo.com with SMTP; 18 Nov 2007 05:52:16 -0000\r\nX-Received: from iglou3.iglou.com ([192.107.41.6] helo=mail.iglou.com)\n\tby rdsmtp.iglou.com with esmtpa (Exim MTA/8.19.3)\n\t(envelope-from &lt;phthenry@...&gt;)\n\tid 1Itd4p-00017h-RP by authid &lt;igloumta&gt; with igloumta_auth\n\tfor Read_Alphabet@yahoogroups.com; Sun, 18 Nov 2007 00:52:15 -0500\r\nX-Received: from loudsl01-253-111-18.iglou.com ([64.253.111.18] helo=Enid-Johnsons-Computer.local)\n\tby smtp.iglou.com with esmtp (Exim MTA/8.19.3)\n\t(envelope-from &lt;phthenry@...&gt;)\n\tid 1Itd4p-0005mu-JU\n\tfor Read_Alphabet@yahoogroups.com; Sun, 18 Nov 2007 00:52:15 -0500\r\nMessage-ID: &lt;473FD30B.6030602@...&gt;\r\nDate: Sun, 18 Nov 2007 00:52:11 -0500\r\nUser-Agent: Thunderbird 2.0.0.9 (Macintosh/20071031)\r\nMIME-Version: 1.0\r\nTo: Read_Alphabet@yahoogroups.com\r\nReferences: &lt;fhl36q+8rcj@...&gt;\r\nIn-Reply-To: &lt;fhl36q+8rcj@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-IgLou-Customer: 6ab7d2bd86677d7d54d075759b28f06c\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Paul Tremblay &lt;phthenry@...&gt;\r\nSubject: Re: [Read_Alphabet] Re: QS news update\r\nX-Yahoo-Group-Post: member; u=214981082; y=ydJquShmGti3I4Gd1sZbw481Y9DImWWkHqqugPWOIgUThjXTQyM4aA\r\nX-Yahoo-Profile: paulhtremblay\r\n\r\nAnthony Grahn wrote:\n&gt; \n\n&gt; \n&gt; This is an interesting proposal; I suppose the suggestion amounts to this:\n&gt; \n&gt; use #21Ing for:\n&gt; 1. the sounds of /N/ (this is the QM rule)\n&gt; 2. the sounds of Lexical Set KIT + /N/\n&gt; 3. the sounds of Lexical Set FLEECE + /N/\n&gt; \n&gt; I would also like to add:\n&gt; 4. the sound /N/+/g/\n&gt; \n&gt; I suggest #4 because 1.in practice most people will rarely distinguish\n&gt; &quot;finger&quot; and &quot;sing&quot; and 2. I know of no case where it is necessary to\n&gt; indicate that difference in writing and 3. the /Nk/ is more obvious\n&gt; and less error prone than /N/+/g/ and can be still be written as Ing+Key\n&gt; \n\nOkay, so I&#39;ve followed this rule as so:\n\n1. Find out if the QS word ends in &#39;iN&#39; or &#39;IN&#39; or &#39;Ng&#39;\n\n2. If 1 is true, check for the root word in TO. So for the word \nabsorbing (abzYrbiN), knock of the ing, and see if the root exits. It \ndoes, so go with the QS word abzYrbN\n\n3. If 2 is false, check to see for the root word in QS. So for the word\n(abrogating) AbragEtiN, if I knock off the &quot;ing&quot; in the TO word, I come \nup with &quot;abrogat,&quot; not a word. But if I knock off &quot;iN&quot; from the QS word, \nI come up with the QS word &quot;AbragEt,&quot; which exists. So change AbragEtiN \nto AbragEtN\n\n4. No root if found in either QS or TO, so don&#39;t change the word. This \nleads to some errors. For example, the word &quot;advocating&quot; (AdvakEtiN) has \nneither a TO or a QS root, because if you take off the &quot;ing,&quot; you get \n&quot;advoat,&quot; and if you take off the &quot;iN&quot; you get &quot;AdvakEt,&quot; but the root \nword in QS is pronounced &quot;Advakat,&quot; so there is no match.\n\nI followed the same rules for words ending in &quot;ed&quot; or &quot;ad.&quot;\n\nThis algorithm will give me an error with the word &quot;bed.&quot; It will look \nfor the TO root of &quot;b&quot; and find the letter b. In order to handle this I \nneed to explain that I am using this algorithm to generate a CMU \ndictionary. Another dict of checked words will always override this \ndictionary, so I need to put &quot;bed bed&quot; (TO and QS the same in this case) \nin the checked words dict. The algorithm will only be run when creating \na CMU dictionary, maybe only once, maybe several more times if we devise \nmore clever ways to convert the bulk of English words.\n\nPaul\n\n\n"
}