{
  "userId": 168229681,
  "authorName": "oliver langan",
  "from": "&quot;oliver langan&quot; &lt;oliverlangan@...&gt;",
  "profile": "oliverlangan",
  "replyTo": "LIST",
  "senderId": "SX-Yhc9g6UAsS9CqBGF4CQe3mqLvi4ATW5Ep2IS38vba68_trqQ90AjWljBIKlb9HAhdAjbDQMhCCbluYIRE39gIGZ7EB4vZV94G1_XEy_uoBA",
  "spamInfo": {
    "isSpam": false,
    "reason": "6"
  },
  "subject": "Re: A small note on the Unicode proposal",
  "postDate": "1152565056",
  "msgId": 751,
  "canDelete": false,
  "contentTrasformed": false,
  "systemMessage": false,
  "headers": {
    "messageIdInHeader": "PGU4dWYwMCtnbGpuQGVHcm91cHMuY29tPg==",
    "inReplyToHeader": "PDQ0QjJBMDUwLjkwNEB5YWhvby5jby51az4="
  },
  "prevInTopic": 750,
  "nextInTopic": 752,
  "prevInTime": 750,
  "nextInTime": 752,
  "topicId": 746,
  "numMessagesInTopic": 9,
  "msgSnippet": "... combining char. ... (obviously :). ... Alternately, we could decide that the underlining or not of numbers is outside of the scope of the Unicode proposal.",
  "messageBody": "<div id=\"ygrps-yiv-130460785\"><blockquote><span title=\"ireply\">&gt; You make a very good point about the underlined numbers, we either have<br/>\n&gt; to create code points for underlined digits or an underline<br/>\n </span></blockquote>combining char.<br/>\n<blockquote><span title=\"ireply\"> &gt; The first will cost 3 bytes per digit and need 10 code points<br/>\n </span></blockquote>(obviously :).<br/>\n<blockquote><span title=\"ireply\"> &gt; The second will cost 4 bytes per digit but will only take one code point<br/>\n&gt; and would allow other chars to be underlined - such as the commas in<br/>\n&gt; 1,000,000.<br/>\n&gt; Neither system would allow the digits to be properly parsed as numbers<br/>\n&gt; by legacy programs though.<br/>\n<br/>\n </span></blockquote>Alternately, we could decide that the underlining or not of numbers is<br/>\noutside of the scope of the Unicode proposal.  I don&#39;t like it,<br/>\nmyself, and do not follow it when I write (or type) Quickscript:<br/>\nmoreover, as you point out it would cause problems with machine<br/>\nparsing of the numbers.  I think that the QS manual should be the<br/>\n&#39;first source&#39; for the alphabet, but I don&#39;t think it necessarily<br/>\nneeds to be followed slavishly.<br/>\n<br/>\nNow that I think about it, the underlining could be handled within the<br/>\nfont.  It would not be true underlining, but it would have a<br/>\nconsistent look.<br/>\n<br/>\noliver</div>",
  "specialLinks": [],
  "rawEmail": "Return-Path: &lt;oliverlangan@...&gt;\r\nX-Sender: oliverlangan@...\r\nX-Apparently-To: Read_Alphabet@yahoogroups.com\r\nReceived: (qmail 93680 invoked from network); 10 Jul 2006 21:03:09 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m22.grp.scd.yahoo.com with QMQP; 10 Jul 2006 21:03:09 -0000\r\nReceived: from unknown (HELO n23b.bullet.sc5.yahoo.com) (66.163.187.190)\n  by mta9.grp.scd.yahoo.com with SMTP; 10 Jul 2006 21:03:09 -0000\r\nReceived: from [66.163.187.121] by n23.bullet.sc5.yahoo.com with NNFMP; 10 Jul 2006 20:57:37 -0000\r\nReceived: from [66.218.69.6] by t2.bullet.sc5.yahoo.com with NNFMP; 10 Jul 2006 20:57:36 -0000\r\nReceived: from [66.218.66.81] by t6.bullet.scd.yahoo.com with NNFMP; 10 Jul 2006 20:57:36 -0000\r\nDate: Mon, 10 Jul 2006 20:57:36 -0000\r\nTo: Read_Alphabet@yahoogroups.com\r\nMessage-ID: &lt;e8uf00+gljn@...&gt;\r\nIn-Reply-To: &lt;44B2A050.904@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;oliver langan&quot; &lt;oliverlangan@...&gt;\r\nSubject: Re: A small note on the Unicode proposal\r\nX-Yahoo-Group-Post: member; u=168229681; y=TIfsiqv-VBZwxPq-75-zhowywQau8og5BBiNfprbbnW1AtUbO0TA\r\nX-Yahoo-Profile: oliverlangan\r\n\r\n&gt; You make a very good point about the underlined numbers, we either have\n&gt;=\r\n to create code points for underlined digits or an underline\ncombining char=\r\n.\n&gt; The first will cost 3 bytes per digit and need 10 code points\n(obviousl=\r\ny :).\n&gt; The second will cost 4 bytes per digit but will only take one code =\r\npoint\n&gt; and would allow other chars to be underlined - such as the commas i=\r\nn\n&gt; 1,000,000.\n&gt; Neither system would allow the digits to be properly parse=\r\nd as numbers\n&gt; by legacy programs though.\n\nAlternately, we could decide tha=\r\nt the underlining or not of numbers is\noutside of the scope of the Unicode =\r\nproposal.  I don&#39;t like it,\nmyself, and do not follow it when I write (or t=\r\nype) Quickscript:\nmoreover, as you point out it would cause problems with m=\r\nachine\nparsing of the numbers.  I think that the QS manual should be the\n&#39;f=\r\nirst source&#39; for the alphabet, but I don&#39;t think it necessarily\nneeds to be=\r\n followed slavishly.\n\nNow that I think about it, the underlining could be h=\r\nandled within the\nfont.  It would not be true underlining, but it would hav=\r\ne a\nconsistent look.\n\noliver\n\n\n\n\n\n\n"
}