{
  "userId": 214981082,
  "authorName": "Paul Tremblay",
  "from": "Paul Tremblay &lt;phthenry@...&gt;",
  "profile": "paulhtremblay",
  "replyTo": "LIST",
  "senderId": "s9fKS1xsBqhblGXRMqmNNexPloxDqkToYlVCZKzs9KjSpO0VAylVgs0dNdr52jtZa5xbLGcjDdoicqrKZVjq632gt9cYmdpwcw",
  "spamInfo": {
    "isSpam": false,
    "reason": "12"
  },
  "subject": "Re: [Read_Alphabet] Re: On PALM",
  "postDate": "1195623380",
  "msgId": 1604,
  "canDelete": false,
  "contentTrasformed": false,
  "systemMessage": false,
  "headers": {
    "messageIdInHeader": "PDQ3NDNDM0Q0LjQwMzA1MDlAaWdsb3UuY29tPg==",
    "inReplyToHeader": "PDIwMDcxMTIxMDUwMjQ0LkdHMjU0MkBtZXJjdXJ5LmNjaWwub3JnPg==",
    "referencesHeader": "PGZodnJ0MCs4YjBjQGVHcm91cHMuY29tPiA8NDc0MzdEQUUuMjA5MDcwN0BpZ2xvdS5jb20+IDwyMDA3MTEyMTAzNTIyNy5HQzI1NDJAbWVyY3VyeS5jY2lsLm9yZz4gPDQ3NDNCNDE0LjkwNDA0MDhAaWdsb3UuY29tPiA8MjAwNzExMjEwNDQwNDAuR0UyNTQyQG1lcmN1cnkuY2NpbC5vcmc+IDw0NzQzQjk0OC41MDYwNTAzQGlnbG91LmNvbT4gPDIwMDcxMTIxMDUwMjQ0LkdHMjU0MkBtZXJjdXJ5LmNjaWwub3JnPg=="
  },
  "prevInTopic": 1602,
  "nextInTopic": 1606,
  "prevInTime": 1603,
  "nextInTime": 1605,
  "topicId": 1571,
  "numMessagesInTopic": 85,
  "msgSnippet": "... If we get our own plane, then we will have to talk just about Unicode. I wasn t being specific either way. I understand that Unicode doesn t accept",
  "messageBody": "<div id=\"ygrps-yiv-1132286648\">John Cowan wrote:<br/>\n<blockquote><span title=\"ireply\"> &gt; <br/>\n&gt; <br/>\n&gt; Paul Tremblay scripsit:<br/>\n&gt; <br/>\n&gt;  &gt; But that is an extra key, and not a natural one. If you want to type the<br/>\n&gt;  &gt; ligature Earth, right now you type one letter on the keyboard. (When<br/>\n&gt;  &gt; you are using the ASCII font.)<br/>\n&gt; <br/>\n&gt; I thought we were talking about Unicode. Unicode doesn&#39;t encode ligatures<br/>\n&gt; separately, unless they belong to legacy character sets like MacRoman.<br/>\n&gt; <br/>\n<br/>\n </span></blockquote>If we get our own plane, then we will have to talk just about Unicode. I <br/>\nwasn&#39;t being specific either way. I understand that Unicode doesn&#39;t <br/>\naccept ligatures, which is why I have been hinting that our Unicode <br/>\nplane might need more characters. A ligature is a typographical feature. <br/>\nI am proposing that ligatures like Earth (or perhaps only Earth), become <br/>\nmore than just a typographical feature, so that reading words like <br/>\n&quot;arrest&quot; becomes more clear. Or, if a new character does not seem <br/>\nworkable, then some other solution to work with the confusion created by <br/>\nsuch combinations as &quot;arrest.&quot;<br/>\n<br/>\nWhen I read the news, I have to scan ahead when I come across Ado Roar <br/>\nto see if another vowel follows it. If that is the case, then I have to <br/>\nsound out the word both ways, one with the Ado + Roar = Nurse, and one <br/>\nwhere Ado is like the schwa sound. To be fair, we do interpret much more <br/>\ncomplex sequences in TO every day, so my difficulty may just lie in my <br/>\ninexperience.<br/>\n<br/>\nHowever, I just want to make clear from a typographical viewpoint, using <br/>\na ligature with a ligature table is not a good solution because we are <br/>\neither going to have to type in an extra obscure Unicode character to <br/>\nsurpress or trigger the ligature, or let the program replace all <br/>\nsequenes with ligatures, which defeats what I am intending them for. <br/>\nPlus, we are going to have to rely on the application to read the <br/>\nligature table. Naturally, users like Moira will wonder what the <br/>\nadvantages to such a system is. Right now I notice she types these <br/>\nligatures directly. What is the advantage to having Unicode if she has <br/>\nto type in an extra character, and then she must remember what that <br/>\ncharacter is, and then she will have to find a way to map this to her <br/>\nkeyboard?<br/>\n<br/>\nAs for now, I think I will simply cut and paste the ligatures to six <br/>\nspots in the private Unicode area, and then regenerate the CMU dict to <br/>\nuse these private spots.<br/>\n<br/>\nPaul</div>",
  "specialLinks": [],
  "rawEmail": "Return-Path: &lt;phthenry@...&gt;\r\nX-Sender: phthenry@...\r\nX-Apparently-To: Read_Alphabet@yahoogroups.com\r\nX-Received: (qmail 57437 invoked from network); 21 Nov 2007 05:36:27 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m49.grp.scd.yahoo.com with QMQP; 21 Nov 2007 05:36:27 -0000\r\nX-Received: from unknown (HELO rdsmtp.iglou.com) (192.107.41.63)\n  by mta16.grp.scd.yahoo.com with SMTP; 21 Nov 2007 05:36:27 -0000\r\nX-Received: from iglou1.iglou.com ([192.107.41.3] helo=mail.iglou.com)\n\tby rdsmtp.iglou.com with esmtpa (Exim MTA/8.19.3)\n\t(envelope-from &lt;phthenry@...&gt;)\n\tid 1IuiGA-0004Rz-OF by authid &lt;igloumta&gt; with igloumta_auth\n\tfor Read_Alphabet@yahoogroups.com; Wed, 21 Nov 2007 00:36:26 -0500\r\nX-Received: from loudsl01-253-111-18.iglou.com ([64.253.111.18] helo=Enid-Johnsons-Computer.local)\n\tby smtp.iglou.com with esmtp (Exim MTA/8.19.3)\n\t(envelope-from &lt;phthenry@...&gt;)\n\tid 1IuiGA-0002ia-CJ\n\tfor Read_Alphabet@yahoogroups.com; Wed, 21 Nov 2007 00:36:26 -0500\r\nMessage-ID: &lt;4743C3D4.4030509@...&gt;\r\nDate: Wed, 21 Nov 2007 00:36:20 -0500\r\nUser-Agent: Thunderbird 2.0.0.9 (Macintosh/20071031)\r\nMIME-Version: 1.0\r\nTo: Read_Alphabet@yahoogroups.com\r\nReferences: &lt;fhvrt0+8b0c@...&gt; &lt;47437DAE.2090707@...&gt; &lt;20071121035227.GC2542@...&gt; &lt;4743B414.9040408@...&gt; &lt;20071121044040.GE2542@...&gt; &lt;4743B948.5060503@...&gt; &lt;20071121050244.GG2542@...&gt;\r\nIn-Reply-To: &lt;20071121050244.GG2542@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-IgLou-Customer: 6ab7d2bd86677d7d54d075759b28f06c\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Paul Tremblay &lt;phthenry@...&gt;\r\nSubject: Re: [Read_Alphabet] Re: On PALM\r\nX-Yahoo-Group-Post: member; u=214981082; y=pqF_Kcfl3Q8HmafttpWaK9o1BeBwjeT5uwMVm6M0tZzumXWIrHD7XA\r\nX-Yahoo-Profile: paulhtremblay\r\n\r\nJohn Cowan wrote:\n&gt; \n&gt; \n&gt; Paul Tremblay scripsit:\n&gt; \n&gt;  &gt; But that is an extra key, and not a natural one. If you want to type the\n&gt;  &gt; ligature Earth, right now you type one letter on the keyboard. (When\n&gt;  &gt; you are using the ASCII font.)\n&gt; \n&gt; I thought we were talking about Unicode. Unicode doesn&#39;t encode ligatures\n&gt; separately, unless they belong to legacy character sets like MacRoman.\n&gt; \n\nIf we get our own plane, then we will have to talk just about Unicode. I \nwasn&#39;t being specific either way. I understand that Unicode doesn&#39;t \naccept ligatures, which is why I have been hinting that our Unicode \nplane might need more characters. A ligature is a typographical feature. \nI am proposing that ligatures like Earth (or perhaps only Earth), become \nmore than just a typographical feature, so that reading words like \n&quot;arrest&quot; becomes more clear. Or, if a new character does not seem \nworkable, then some other solution to work with the confusion created by \nsuch combinations as &quot;arrest.&quot;\n\nWhen I read the news, I have to scan ahead when I come across Ado Roar \nto see if another vowel follows it. If that is the case, then I have to \nsound out the word both ways, one with the Ado + Roar = Nurse, and one \nwhere Ado is like the schwa sound. To be fair, we do interpret much more \ncomplex sequences in TO every day, so my difficulty may just lie in my \ninexperience.\n\nHowever, I just want to make clear from a typographical viewpoint, using \na ligature with a ligature table is not a good solution because we are \neither going to have to type in an extra obscure Unicode character to \nsurpress or trigger the ligature, or let the program replace all \nsequenes with ligatures, which defeats what I am intending them for. \nPlus, we are going to have to rely on the application to read the \nligature table. Naturally, users like Moira will wonder what the \nadvantages to such a system is. Right now I notice she types these \nligatures directly. What is the advantage to having Unicode if she has \nto type in an extra character, and then she must remember what that \ncharacter is, and then she will have to find a way to map this to her \nkeyboard?\n\nAs for now, I think I will simply cut and paste the ligatures to six \nspots in the private Unicode area, and then regenerate the CMU dict to \nuse these private spots.\n\nPaul\n\n"
}