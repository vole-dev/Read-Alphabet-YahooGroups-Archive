{
  "userId": 180175951,
  "authorName": "amd64_hacker",
  "from": "amd64_hacker &lt;amd64_hacker@...&gt;",
  "profile": "amd64_hacker",
  "replyTo": "LIST",
  "senderId": "8teHf-_gqjFGrx1NoG-tsHZZsxEHK6gL2w-Zv5mN0FPfh30fZvVXhWy8EPkYgrmNJq-ePzAVK1NkYnOitDqbjjctV6A0zGcRs0uZlNo1",
  "spamInfo": {
    "isSpam": false,
    "reason": "0"
  },
  "subject": "Re: [Read_Alphabet] Re: Unicode proposal again.",
  "postDate": "1180472314",
  "msgId": 960,
  "canDelete": false,
  "contentTrasformed": false,
  "systemMessage": false,
  "headers": {
    "messageIdInHeader": "PDQ2NUM5M0ZBLjcwNzAxMDhAeWFob28uY28udWs+",
    "inReplyToHeader": "PDIwMDcwNTI5MjAyNjU3LkdJMjc0NkBtZXJjdXJ5LmNjaWwub3JnPg==",
    "referencesHeader": "PGYzZjU2OCtuc2MwQGVHcm91cHMuY29tPiA8MDA1MDAxYzdhMWIzJDc4MTFkMTQwJDAzMDAwMDBhQHVsYjFpPiA8cDA2MjQwODAzYzI4MThjNWNhNzY3QFsxOTIuMTY4LjEuMTM0XT4gPDQ2NUM1RjE3LjMwMzA0MDBAeWFob28uY28udWs+IDwyMDA3MDUyOTIwMjY1Ny5HSTI3NDZAbWVyY3VyeS5jY2lsLm9yZz4="
  },
  "prevInTopic": 959,
  "nextInTopic": 961,
  "prevInTime": 959,
  "nextInTime": 961,
  "topicId": 947,
  "numMessagesInTopic": 45,
  "msgSnippet": "You re completely right, but I m not talking about ligatures, I m talking about short circuiting the glyph selection. For example Quikscript Letter No followed",
  "messageBody": "<div id=\"ygrps-yiv-518090875\">You&#39;re completely right, but I&#39;m not talking about ligatures, I&#39;m<br/>\ntalking about short circuiting the glyph selection.<br/>\n<br/>\nFor example Quikscript Letter No followed by Variant Selector 1 would be<br/>\nthe &#39;normal&#39; glyph with the join points at the top.<br/>\nQuikscript Letter No followed by Variant Selector 2 would select the<br/>\n&#39;alternate&#39; glyph with the joins at the bottom.<br/>\n<br/>\nThe glyphs would be passed on to the next stage of rendering as normal<br/>\n(probably fetching the kerning).<br/>\n<br/>\nThis isn&#39;t something I&#39;d recommend for day to day use and it certainly<br/>\nshouldn&#39;t be part of the proposal.<br/>\n<br/>\nI just think that we should have a semi-formal way of constructing a<br/>\nlist of glyphs (and there&#39;s no point re-inventing what Unicode already<br/>\nprovides :-) so that we have some base line examples we can test against<br/>\nthe glyph/ligature selections of Quikscript Senior fonts.<br/>\n<br/>\nJohn Cowan wrote:<br/>\n<blockquote><span title=\"qreply\"> &gt;<br/>\n&gt; amd64_hacker scripsit:<br/>\n&gt;<br/>\n&gt; &gt; I do think we should have a semi-official/standard way of overriding the<br/>\n&gt; &gt; choices the rendering layer makes though.<br/>\n&gt;<br/>\n&gt; Yes.<br/>\n&gt;<br/>\n&gt; &gt; Luckily Unicode already has just the thing - Variant Selectors.<br/>\n&gt;<br/>\n&gt; Yes, it has them, but that is the wrong thing. The standard way to<br/>\n&gt; prevent ligaturing is to use the character U+200D, ZERO WIDTH NON-JOINER,<br/>\n&gt; between the characters not to be ligatured. Contrariwise, ligaturing<br/>\n&gt; may be promoted (it can never be forced, because if the font has no<br/>\n&gt; ligature glyph you are out of luck) using U+200C, ZERO WIDTH JOINER.<br/>\n&gt;<br/>\n&gt; For a Latin-font example, you could prevent &quot;fi&quot; from being ligatured<br/>\n&gt; even in a font that supported automatic ligaturing using f+ZWNJ+i;<br/>\n&gt; but if you wanted &quot;ct&quot; to be ligatured, you could invoke it using c+ZWJ+t.<br/>\n&gt;<br/>\n&gt; -- <br/>\n&gt; In politics, obedience and support John Cowan &lt;<a rel=\"nofollow\" target=\"_blank\" href=\"mailto:cowan@...\">cowan@...</a><br/>\n&gt; &lt;mailto:cowan%40ccil.org&gt;&gt;<br/>\n&gt; are the same thing. --Hannah Arendt <a rel=\"nofollow\" target=\"_blank\" href=\"http://www.ccil.org/~cowan\">http://www.ccil.org/~cowan</a><br/>\n&gt; &lt;<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.ccil.org/%7Ecowan\">http://www.ccil.org/%7Ecowan</a>&gt;<br/>\n&gt;<br/>\n&gt; </span></blockquote></div>",
  "specialLinks": [],
  "rawEmail": "Return-Path: &lt;amd64_hacker@...&gt;\r\nX-Sender: amd64_hacker@...\r\nX-Apparently-To: Read_Alphabet@yahoogroups.com\r\nReceived: (qmail 68381 invoked from network); 29 May 2007 20:56:01 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m36.grp.scd.yahoo.com with QMQP; 29 May 2007 20:56:01 -0000\r\nReceived: from unknown (HELO smtp006.mail.ukl.yahoo.com) (217.12.11.95)\n  by mta13.grp.scd.yahoo.com with SMTP; 29 May 2007 20:56:00 -0000\r\nReceived: (qmail 99704 invoked from network); 29 May 2007 20:55:49 -0000\r\nReceived: from unknown (HELO ?192.168.0.1?) (amd64_hacker@82.19.52.162 with plain)\n  by smtp006.mail.ukl.yahoo.com with SMTP; 29 May 2007 20:55:48 -0000\r\nX-YMail-OSG: w0_F0VcVM1nVNwO9yhu_Hekw1w5r.pLQysVU.0uq2LNZMl7FFzmR5FI0WObfV.1UuEuGa9oeQS7knncUEfDmQ_W9evCjrI_indeA_Ee1NCjqjTOZuNF9JbvotJQ-\r\nMessage-ID: &lt;465C93FA.7070108@...&gt;\r\nDate: Tue, 29 May 2007 21:58:34 +0100\r\nUser-Agent: Thunderbird 1.5.0.10 (X11/20070306)\r\nMIME-Version: 1.0\r\nTo: Read_Alphabet@yahoogroups.com\r\nReferences: &lt;f3f568+nsc0@...&gt; &lt;005001c7a1b3$7811d140$0300000a@ulb1i&gt; &lt;p06240803c2818c5ca767@[192.168.1.134]&gt; &lt;465C5F17.3030400@...&gt; &lt;20070529202657.GI2746@...&gt;\r\nIn-Reply-To: &lt;20070529202657.GI2746@...&gt;\r\nX-Enigmail-Version: 0.94.0.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: amd64_hacker &lt;amd64_hacker@...&gt;\r\nSubject: Re: [Read_Alphabet] Re: Unicode proposal again.\r\nX-Yahoo-Group-Post: member; u=180175951; y=RnsdtmElnqJluNZbzCbrfvctN8kjP4sxqELkXrxWoctd6_mGKGVq\r\nX-Yahoo-Profile: amd64_hacker\r\n\r\nYou&#39;re completely right, but I&#39;m not talking about ligatures, I&#39;m\ntalking about short circuiting the glyph selection.\n\nFor example Quikscript Letter No followed by Variant Selector 1 would be\nthe &#39;normal&#39; glyph with the join points at the top.\nQuikscript Letter No followed by Variant Selector 2 would select the\n&#39;alternate&#39; glyph with the joins at the bottom.\n\nThe glyphs would be passed on to the next stage of rendering as normal\n(probably fetching the kerning).\n\nThis isn&#39;t something I&#39;d recommend for day to day use and it certainly\nshouldn&#39;t be part of the proposal.\n\nI just think that we should have a semi-formal way of constructing a\nlist of glyphs (and there&#39;s no point re-inventing what Unicode already\nprovides :-) so that we have some base line examples we can test against\nthe glyph/ligature selections of Quikscript Senior fonts.\n\nJohn Cowan wrote:\n&gt;\n&gt; amd64_hacker scripsit:\n&gt;\n&gt; &gt; I do think we should have a semi-official/standard way of overriding the\n&gt; &gt; choices the rendering layer makes though.\n&gt;\n&gt; Yes.\n&gt;\n&gt; &gt; Luckily Unicode already has just the thing - Variant Selectors.\n&gt;\n&gt; Yes, it has them, but that is the wrong thing. The standard way to\n&gt; prevent ligaturing is to use the character U+200D, ZERO WIDTH NON-JOINER,\n&gt; between the characters not to be ligatured. Contrariwise, ligaturing\n&gt; may be promoted (it can never be forced, because if the font has no\n&gt; ligature glyph you are out of luck) using U+200C, ZERO WIDTH JOINER.\n&gt;\n&gt; For a Latin-font example, you could prevent &quot;fi&quot; from being ligatured\n&gt; even in a font that supported automatic ligaturing using f+ZWNJ+i;\n&gt; but if you wanted &quot;ct&quot; to be ligatured, you could invoke it using c+ZWJ+t.\n&gt;\n&gt; -- \n&gt; In politics, obedience and support John Cowan &lt;cowan@...\n&gt; &lt;mailto:cowan%40ccil.org&gt;&gt;\n&gt; are the same thing. --Hannah Arendt http://www.ccil.org/~cowan\n&gt; &lt;http://www.ccil.org/%7Ecowan&gt;\n&gt;\n&gt;  \n\n\n"
}